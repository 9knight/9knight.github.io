<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Aubrey Ding]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2015-11-14T18:36:30.951Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[Aubrey Ding]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Python Django Question and Solution]]></title>
    <link href="http://yoursite.com/2015/11/15/Python-Django-Question-and-Solution/"/>
    <id>http://yoursite.com/2015/11/15/Python-Django-Question-and-Solution/</id>
    <published>2015-11-14T17:54:16.000Z</published>
    <updated>2015-11-14T18:36:30.951Z</updated>
    <content type="html"><![CDATA[<h3 id="Database_in_django">Database in django</h3><h4 id="1-_Connect_mysql_error:cannot_import_name_‘BaseDatabaseFeatures’">1. Connect mysql error:cannot import name ‘BaseDatabaseFeatures’</h4><p><strong>Python version：3.4<br>Django version:1.8</strong></p>
<h5 id="Solution:">Solution:</h5><p>Should update the mysql-connector-python, since the old version don’t support Django 1.8 well. As the documentation of Django goes:</p>
<blockquote>
<p>MySQL Connector/Python is available from the download page. The Django &gt;adapter is available in versions 1.1.X and later. It may not support the &gt;most recent releases of Django.</p>
</blockquote>
<p>Use the following command to update it from the MySQL website:</p>
<pre><code>pip <span class="operator"><span class="keyword">install</span> <span class="keyword">http</span>://dev.mysql.com/<span class="keyword">get</span>/Downloads/Connector-Python/mysql-connector-python-<span class="number">2.1</span><span class="number">.3</span>.tar.gz</span>
</code></pre><h4 id="2-_Sync_database_command:">2. Sync database command:</h4><p>In command:</p>
<pre><code>$ python manage<span class="class">.py</span> makemigrations [model]
$ python manage<span class="class">.py</span> migrate
</code></pre><h3 id="Admin_application">Admin application</h3><h4 id="1-_Creat_an_admin_user">1. Creat an admin user</h4><p>Run command:</p>
<pre><code>$ python manage<span class="class">.py</span> createsuperuser
</code></pre><p>Enter your desired username and press enter:</p>
<pre><code><span class="attribute">Username</span>: <span class="string">admin</span>
</code></pre><p>You will then be prompted for your desired email address:</p>
<pre><code>Email <span class="string">address:</span> admin<span class="annotation">@example</span>.com
</code></pre><p>The final step is to enter your password. You will be asked to enter your password twice, the second time as a confirmation of the first.</p>
<pre><code>Password: <span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>
Password (again): <span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>
Superuser created successfully.
</code></pre><h4 id="2-_Manage_custom_model_in_admin_application">2. Manage custom model in admin application</h4><p>In custom model/admin.py:</p>
<pre><code><span class="comment"><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">from django<span class="class">.contrib</span> import admin</span><br><span class="line">from <span class="class">.models</span> import [Model Name]</span><br><span class="line"></span><br><span class="line">admin<span class="class">.site</span><span class="class">.register</span>([Model Name])</span><br></pre></td></tr></table></figure></span>
</code></pre><h4 id="3-_Customize_the_admin_form(field)">3. Customize the admin form(field)</h4><p>In custom model/admin.py:</p>
<pre><code><span class="comment"><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">from django<span class="class">.contrib</span> import admin</span><br><span class="line">from <span class="class">.models</span> import [Model Name]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class [Model Name]<span class="function"><span class="title">Admin</span><span class="params">(admin.ModelAdmin)</span></span>:</span><br><span class="line">    fields = [<span class="string">'Fieldname'</span>, <span class="string">'Fieldname'</span>]</span><br><span class="line"></span><br><span class="line">admin<span class="class">.site</span><span class="class">.register</span>([Model Name], [Model Name]Admin)</span><br></pre></td></tr></table></figure></span>
</code></pre><h4 id="4-_Split_the_form：">4. Split the form：</h4><p>In custom model/admin.py:</p>
<pre><code><span class="comment"><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">from</span> django.contrib <span class="import"><span class="keyword">import</span> admin</span></span><br><span class="line"><span class="title">from</span> .models <span class="import"><span class="keyword">import</span> Question</span></span><br><span class="line"><span class="class"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> [<span class="type">Model</span> <span class="type">Name</span>]<span class="type">Admin</span><span class="container">(<span class="title">admin</span>.<span class="type">ModelAdmin</span>)</span>:</span><br><span class="line">    fieldsets = [</span><br><span class="line">        <span class="container">(<span class="type">None</span>,               &#123;'<span class="title">fields'</span>: ['<span class="title">fieldname'</span>]&#125;)</span>,</span><br><span class="line">        <span class="container">('<span class="type">Date</span> <span class="title">information'</span>, &#123;'<span class="title">fields'</span>: ['<span class="title">fieldname'</span>]&#125;)</span>,</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">admin.site.register<span class="container">([<span class="type">Model</span> <span class="type">Name</span>], [<span class="type">Model</span> <span class="type">Name</span>]<span class="type">Admin</span>)</span></span></span><br></pre></td></tr></table></figure></span>
</code></pre><p>Like this:</p>
<p><img src="https://docs.djangoproject.com/en/1.8/_images/admin08t.png" alt=""></p>
<h4 id="5-_Collapse_some_split_form">5. Collapse some split form</h4><p>In custom model/admin.py:</p>
<pre><code><span class="comment"><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">from</span> django.contrib <span class="import"><span class="keyword">import</span> admin</span></span><br><span class="line"><span class="title">from</span> .models <span class="import"><span class="keyword">import</span> [Model Name]</span></span><br><span class="line"><span class="class"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> [<span class="type">Model</span> <span class="type">Name</span>]<span class="type">Admin</span><span class="container">(<span class="title">admin</span>.<span class="type">ModelAdmin</span>)</span>:</span><br><span class="line">    fieldsets = [</span><br><span class="line">        <span class="container">(<span class="type">None</span>,               &#123;'<span class="title">fields'</span>: ['<span class="title">fieldname'</span>]&#125;)</span>,</span><br><span class="line">        <span class="container">('<span class="type">Date</span> <span class="title">information'</span>, &#123;'<span class="title">fields'</span>: ['<span class="title">fieldname'</span>], '<span class="title">classes'</span>: ['<span class="title">collapse'</span>]&#125;)</span>,</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">admin.site.register<span class="container">([<span class="type">Model</span> <span class="type">Name</span>], [<span class="type">Model</span> <span class="type">Name</span>]<span class="type">Admin</span>)</span></span></span><br></pre></td></tr></table></figure></span>
</code></pre><h4 id="6-_Master-Detail_objects">6. Master-Detail objects</h4><p>In custom model/admin.py:</p>
<pre><code><span class="comment"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Choice, Question</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChoiceInline</span><span class="params">(admin.StackedInline)</span>:</span></span><br><span class="line">    model = Choice</span><br><span class="line">    extra = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QuestionAdmin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    fieldsets = [</span><br><span class="line">        (<span class="keyword">None</span>,               &#123;<span class="string">'fields'</span>: [<span class="string">'question_text'</span>]&#125;),</span><br><span class="line">        (<span class="string">'Date information'</span>, &#123;<span class="string">'fields'</span>: [<span class="string">'pub_date'</span>], <span class="string">'classes'</span>: [<span class="string">'collapse'</span>]&#125;),</span><br><span class="line">    ]</span><br><span class="line">    inlines = [ChoiceInline]</span><br><span class="line"></span><br><span class="line">admin.site.register(Question, QuestionAdmin)</span><br></pre></td></tr></table></figure></span>
</code></pre><p>Tips: This code means, Question have 3 Choice default, like this:</p>
<p><img src="https://docs.djangoproject.com/en/1.8/_images/admin11t.png" alt=""></p>
<p>If:</p>
<pre><code><span class="class"><span class="keyword">class</span> <span class="type">ChoiceInline</span><span class="container">(<span class="title">admin</span>.<span class="type">StackedInline</span>)</span>:</span>
</code></pre><p>Replace to:</p>
<pre><code><span class="class"><span class="keyword">class</span> <span class="type">ChoiceInline</span><span class="container">(<span class="title">admin</span>.<span class="type">TabularInline</span>)</span>:</span>
</code></pre><p>Like this:<br><img src="https://docs.djangoproject.com/en/1.8/_images/admin12t.png" alt=""></p>
<h4 id="7-_Customize_the_list_field_:">7. Customize the list field :</h4><p>In custom model/admin.py:</p>
<pre><code><span class="comment"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QuestionAdmin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line">    list_display = (<span class="string">'question_text'</span>, <span class="string">'pub_date'</span>)</span><br></pre></td></tr></table></figure></span>
</code></pre><p>Tips: Here can field or <strong>def method</strong>!</p>
<h4 id="8-_Add_filter:">8. Add filter:</h4><pre><code><span class="setting">list_filter = <span class="value">[<span class="string">'pub_date'</span>]</span></span>
</code></pre><h4 id="9-_Add_search_field:">9. Add search field:</h4><pre><code><span class="setting">search_fields = <span class="value">[<span class="string">'question_text'</span>]</span></span>
</code></pre><h4 id="10-_Set_display_name:">10. Set display name:</h4><p>In custom model/models.py:</p>
<pre><code><span class="comment"><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">class <span class="function"><span class="title">Manufacturer</span><span class="params">(models.Model)</span></span>:</span><br><span class="line">   	name = models.<span class="function"><span class="title">CharField</span><span class="params">(max_length=<span class="number">50</span>,verbose_name=<span class="string">'生产商名称'</span>)</span></span></span><br></pre></td></tr></table></figure></span>
</code></pre><h3 id="Templates">Templates</h3><h4 id="1-_Add_template_config：">1. Add template config：</h4><p>In setting.py:</p>
<pre><code><span class="comment"><figure class="highlight ocaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">TEMPLATES</span> = [</span><br><span class="line">	    &#123;</span><br><span class="line">	        <span class="symbol">'BACKEND'</span>: <span class="symbol">'django</span>.template.backends.django.<span class="type">DjangoTemplates'</span>,</span><br><span class="line">	        <span class="symbol">'DIRS'</span>: [os.path.join(<span class="type">BASE_DIR</span>, <span class="symbol">'templates'</span>)],</span><br><span class="line">	        <span class="symbol">'APP_DIRS'</span>: <span class="type">True</span>,</span><br><span class="line">	        <span class="symbol">'OPTIONS'</span>: &#123;</span><br><span class="line">	            <span class="symbol">'context_processors'</span>: [</span><br><span class="line">	                <span class="symbol">'django</span>.template.context_processors.debug',</span><br><span class="line">	                <span class="symbol">'django</span>.template.context_processors.request',</span><br><span class="line">	                <span class="symbol">'django</span>.contrib.auth.context_processors.auth',</span><br><span class="line">	                <span class="symbol">'django</span>.contrib.messages.context_processors.messages',</span><br><span class="line">	            ],</span><br><span class="line">	        &#125;,</span><br><span class="line">	    &#125;,</span><br><span class="line">	]</span><br></pre></td></tr></table></figure></span>
</code></pre><h4 id="2-_Where_are_the_Django_source_files?">2. Where are the Django source files?</h4><pre><code><span class="comment"><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ python -c "</span><br><span class="line">import sys</span><br><span class="line">sys.<span class="built_in">path</span> = sys.<span class="built_in">path</span>[<span class="number">1</span>:]</span><br><span class="line">import django</span><br><span class="line"><span class="built_in">print</span>(django.__path__)"</span><br></pre></td></tr></table></figure></span>
</code></pre><h4 id="3-_Using_template:">3. Using template:</h4><p>In view.py:</p>
<pre><code><span class="comment"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render,get_object_or_404</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Manufacturer</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    arraylist = Manufacturer.objects.order_by(<span class="string">'-id'</span>)[:<span class="number">5</span>]</span><br><span class="line">    context = &#123;<span class="string">'arraylist'</span>: arraylist&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'list.html'</span>, context)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">detail</span><span class="params">(request, manufacturerid)</span>:</span></span><br><span class="line">    manufacturer = get_object_or_404(Manufacturer, pk=manufacturerid)</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'detail.html'</span>, &#123;<span class="string">'manufacturer'</span>: manufacturer&#125;)</span><br></pre></td></tr></table></figure></span>
</code></pre><p>In templates/list.html<br>    <figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template_tag">&#123;% <span class="keyword">if</span> arraylist %&#125;</span><span class="xml"></span><br><span class="line">    <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">    </span><span class="template_tag">&#123;% <span class="keyword">for</span> manufacturer <span class="keyword">in</span> arraylist %&#125;</span><span class="xml"></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"/</span></span></span><span class="variable">&#123;&#123; manufacturer.id &#125;&#125;</span><span class="xml"><span class="tag"><span class="value">/"</span>&gt;</span></span><span class="variable">&#123;&#123; manufacturer.name &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">    </span><span class="template_tag">&#123;% <span class="keyword">endfor</span> %&#125;</span><span class="xml"></span><br><span class="line">    <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line"></span><span class="template_tag">&#123;% <span class="keyword">else</span> %&#125;</span><span class="xml"></span><br><span class="line">    <span class="tag">&lt;<span class="title">p</span>&gt;</span>No polls are available.<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"></span><span class="template_tag">&#123;% <span class="keyword">endif</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p>
<p>In templates/detail.html:</p>
<pre><code><span class="comment"><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;<span class="expansion">&#123;&#123; manufacturer.name &#125;&#125;</span>&lt;<span class="regexp">/h1&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line"></span><br><span class="line">    &lt;li&gt;&#123;&#123; manufacturer.name &#125;&#125;&lt;/li</span>&gt;</span><br><span class="line">    &lt;li&gt;<span class="expansion">&#123;&#123; manufacturer.tel &#125;&#125;</span>&lt;<span class="regexp">/li&gt;</span><br><span class="line">    &lt;li&gt;&#123;&#123; manufacturer.address &#125;&#125;&lt;/li</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/ul&gt;</span></span><br></pre></td></tr></table></figure></span>
</code></pre><h4 id="4-_Namespacing_URL_names">4. Namespacing URL names</h4><p>In mysite/urls.py:</p>
<pre><code><span class="comment"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> include, url</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^polls/'</span>, include(<span class="string">'polls.urls'</span>, namespace=<span class="string">"polls"</span>)),</span><br><span class="line">    url(<span class="string">r'^admin/'</span>, include(admin.site.urls)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure></span>
</code></pre><p>In html:</p>
<pre><code><span class="comment"><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;li&gt;&lt;a href=<span class="string">"&#123;% url 'detail' question.id %&#125;"</span>&gt;<span class="expansion">&#123;&#123; question.question_text &#125;&#125;</span>&lt;<span class="regexp">/a&gt;&lt;/li</span>&gt;</span><br></pre></td></tr></table></figure></span>
</code></pre><h4 id="5-_CSS_style">5. CSS style</h4><p>Create a directory called “static” in your custom model directory.</p>
<p>Create style.css file, Example:<br>    <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">li</span> <span class="tag">a</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"> green</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>In template html file:</p>
<p>Insert:<br>    <figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template_tag">&#123;% <span class="keyword">load</span> staticfiles %&#125;</span><span class="xml"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">type</span>=<span class="value">"text/css"</span> <span class="attribute">href</span>=<span class="value">"</span></span></span><span class="template_tag">&#123;% <span class="keyword">static</span> 'polls/style.css' %&#125;</span><span class="xml"><span class="tag"><span class="value">"</span> /&gt;</span></span></span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="Database_in_django">Database in django</h3><h4 id="1-_Connect_mysql_error:cannot_import_name_‘BaseDatabaseFeatures’">1. Connect mysq]]>
    </summary>
    
  </entry>
  
</feed>
